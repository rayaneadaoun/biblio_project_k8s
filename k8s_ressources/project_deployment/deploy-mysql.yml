apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
type: kubernetes.io/basic-auth
stringData:
  password: root
---

# apiVersion: v1
# kind: Secret
# metadata:
#   name: mysql-secret-user
# type: kubernetes.io/basic-auth
# stringData:
#   password: biblio123

# ---

# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: mysql-pv-volume
#   labels:
#     type: local
# spec:
#   storageClassName: manual
#   capacity:
#     storage: 1Gi
#   accessModes:
#     - ReadWriteOnce
#   hostPath:
#     path: "/data"
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: mysql-pv-claim
# spec:
#   storageClassName: manual
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: password
        - name: MYSQL_PASSWORD
          value: biblio123
        - name: MYSQL_USER
          value: bibliouser
        - name: MYSQL_DATABASE
          value: bookservice
        ports:
        - containerPort: 3306
          name: mysql
        # volumeMounts:
        # - name: mysqlstorage
        #   mountPath: /var/lib/mysql/ 
      volumes:
      - name: mysqlstorage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
# ---
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    app: mysql